{
  "stats": {
    "suites": 10,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2018-04-05T20:05:45.514Z",
    "end": "2018-04-05T20:05:45.601Z",
    "duration": 87,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Dashboard",
        "suites": [
          {
            "title": "Render",
            "suites": [],
            "tests": [
              {
                "title": "should render NewLeave button",
                "fullTitle": "Dashboard Render should render NewLeave button",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var newLeaveBtn = wrapper.find('Button');\n(0, _chai.expect)(newLeaveBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(newLeaveBtn.prop('children')).equal('New Leave');",
                "err": {},
                "isRoot": false,
                "uuid": "2654756d-3110-4ba1-b785-e5ad9343f6f0",
                "parentUUID": "c06bbfed-82ac-4307-93f6-8eaed0098346",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/leaves/components/dashboardSpec.js",
            "uuid": "c06bbfed-82ac-4307-93f6-8eaed0098346",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/dashboardSpec.js",
            "passes": [
              {
                "title": "should render NewLeave button",
                "fullTitle": "Dashboard Render should render NewLeave button",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var newLeaveBtn = wrapper.find('Button');\n(0, _chai.expect)(newLeaveBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(newLeaveBtn.prop('children')).equal('New Leave');",
                "err": {},
                "isRoot": false,
                "uuid": "2654756d-3110-4ba1-b785-e5ad9343f6f0",
                "parentUUID": "c06bbfed-82ac-4307-93f6-8eaed0098346",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4,
            "rootEmpty": false
          },
          {
            "title": "Event Handlers",
            "suites": [],
            "tests": [
              {
                "title": "should navigate to new leave page when clicked on New Leave button",
                "fullTitle": "Dashboard Event Handlers should navigate to new leave page when clicked on New Leave button",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var newLeaveBtn = wrapper.find('Button');\nnewLeaveBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(navigateToNewLeaveStub.called).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "deb2c7d2-efc6-4887-af24-42303a9802c4",
                "parentUUID": "ff7484e3-bc96-40c3-adf4-86ab640226b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/leaves/components/dashboardSpec.js",
            "uuid": "ff7484e3-bc96-40c3-adf4-86ab640226b2",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/dashboardSpec.js",
            "passes": [
              {
                "title": "should navigate to new leave page when clicked on New Leave button",
                "fullTitle": "Dashboard Event Handlers should navigate to new leave page when clicked on New Leave button",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var newLeaveBtn = wrapper.find('Button');\nnewLeaveBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(navigateToNewLeaveStub.called).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "deb2c7d2-efc6-4887-af24-42303a9802c4",
                "parentUUID": "ff7484e3-bc96-40c3-adf4-86ab640226b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/components/dashboardSpec.js",
        "uuid": "16fd7d9f-34b9-448d-9a21-331413afe805",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Dashboard \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_dashboard2.default, { navigateToNewLeave: navigateToNewLeaveStub }));",
            "err": {},
            "isRoot": false,
            "uuid": "7bb8d544-3bc1-40a0-9af0-e1845386a017",
            "parentUUID": "16fd7d9f-34b9-448d-9a21-331413afe805",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/dashboardSpec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Leave Form Component",
        "suites": [
          {
            "title": "Render",
            "suites": [],
            "tests": [
              {
                "title": "should have the correct form name",
                "fullTitle": "Leave Form Component Render should have the correct form name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var title = wrapper.find('h2');\n(0, _chai.expect)(title.text()).equal(\"Leave Management System\");",
                "err": {},
                "isRoot": false,
                "uuid": "c9d612ff-2d75-4b57-a173-d31b968d5d48",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render fromDate",
                "fullTitle": "Leave Form Component Render should render fromDate",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var fromDate = wrapper.find('#fromDate');\n(0, _chai.expect)(fromDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(fromDate.prop('type')).equal('date');\n(0, _chai.expect)(fromDate.prop('label')).equal('From');",
                "err": {},
                "isRoot": false,
                "uuid": "a97169ef-013a-4d95-94a0-9d682104aab7",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render toDate",
                "fullTitle": "Leave Form Component Render should render toDate",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var toDate = wrapper.find('#toDate');\n(0, _chai.expect)(toDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(toDate.prop('type')).equal('date');\n(0, _chai.expect)(toDate.prop('label')).equal('To');",
                "err": {},
                "isRoot": false,
                "uuid": "70d97ad4-c3b1-47ff-802d-dbb5a798c478",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render reason",
                "fullTitle": "Leave Form Component Render should render reason",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var reason = wrapper.find('#reason');\n(0, _chai.expect)(reason.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(reason.prop('type')).equal('text');\n(0, _chai.expect)(reason.prop('label')).equal('Reason');",
                "err": {},
                "isRoot": false,
                "uuid": "75464c5a-9359-4419-91b9-0cb3e809f58c",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render leaveType",
                "fullTitle": "Leave Form Component Render should render leaveType",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var leaveType = wrapper.find('FormGroup');\n(0, _chai.expect)(leaveType.find('ControlLabel').prop('children')).equal('Leave Type');\nvar options = leaveType.find('FormControl');\n(0, _chai.expect)(options.childAt(0).prop('children')).equal('Paid Leaves');\n(0, _chai.expect)(options.childAt(1).prop('children')).equal('Leave Without Pay');\n(0, _chai.expect)(options.childAt(2).prop('children')).equal('Compensation Off');",
                "err": {},
                "isRoot": false,
                "uuid": "c8960cb6-ca9a-4296-aa8b-2e3cc7e091fe",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render Submit Button",
                "fullTitle": "Leave Form Component Render should render Submit Button",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var submitBtn = wrapper.find('#submitBtn');\n(0, _chai.expect)(submitBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(submitBtn.prop('children')).equal('Submit');",
                "err": {},
                "isRoot": false,
                "uuid": "4c592d3a-a153-4897-9b2d-8fa1e0a063ef",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/leaves/components/leaveFormSpec.js",
            "uuid": "38eb2946-400e-423f-a0ba-daac15723166",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/leaveFormSpec.js",
            "passes": [
              {
                "title": "should have the correct form name",
                "fullTitle": "Leave Form Component Render should have the correct form name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var title = wrapper.find('h2');\n(0, _chai.expect)(title.text()).equal(\"Leave Management System\");",
                "err": {},
                "isRoot": false,
                "uuid": "c9d612ff-2d75-4b57-a173-d31b968d5d48",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render fromDate",
                "fullTitle": "Leave Form Component Render should render fromDate",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var fromDate = wrapper.find('#fromDate');\n(0, _chai.expect)(fromDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(fromDate.prop('type')).equal('date');\n(0, _chai.expect)(fromDate.prop('label')).equal('From');",
                "err": {},
                "isRoot": false,
                "uuid": "a97169ef-013a-4d95-94a0-9d682104aab7",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render toDate",
                "fullTitle": "Leave Form Component Render should render toDate",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var toDate = wrapper.find('#toDate');\n(0, _chai.expect)(toDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(toDate.prop('type')).equal('date');\n(0, _chai.expect)(toDate.prop('label')).equal('To');",
                "err": {},
                "isRoot": false,
                "uuid": "70d97ad4-c3b1-47ff-802d-dbb5a798c478",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render reason",
                "fullTitle": "Leave Form Component Render should render reason",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var reason = wrapper.find('#reason');\n(0, _chai.expect)(reason.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(reason.prop('type')).equal('text');\n(0, _chai.expect)(reason.prop('label')).equal('Reason');",
                "err": {},
                "isRoot": false,
                "uuid": "75464c5a-9359-4419-91b9-0cb3e809f58c",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render leaveType",
                "fullTitle": "Leave Form Component Render should render leaveType",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var leaveType = wrapper.find('FormGroup');\n(0, _chai.expect)(leaveType.find('ControlLabel').prop('children')).equal('Leave Type');\nvar options = leaveType.find('FormControl');\n(0, _chai.expect)(options.childAt(0).prop('children')).equal('Paid Leaves');\n(0, _chai.expect)(options.childAt(1).prop('children')).equal('Leave Without Pay');\n(0, _chai.expect)(options.childAt(2).prop('children')).equal('Compensation Off');",
                "err": {},
                "isRoot": false,
                "uuid": "c8960cb6-ca9a-4296-aa8b-2e3cc7e091fe",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render Submit Button",
                "fullTitle": "Leave Form Component Render should render Submit Button",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var submitBtn = wrapper.find('#submitBtn');\n(0, _chai.expect)(submitBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(submitBtn.prop('children')).equal('Submit');",
                "err": {},
                "isRoot": false,
                "uuid": "4c592d3a-a153-4897-9b2d-8fa1e0a063ef",
                "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "Event Handlers",
            "suites": [],
            "tests": [
              {
                "title": "should update fromDate when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update fromDate when it is changed",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var fromDate = wrapper.find('#fromDate');\nfromDate.simulate('change', { target: { value: '2018-04-01' } });\n(0, _chai.expect)(wrapper.state().fromDate.toString()).equal('Sun Apr 01 2018 02:00:00 GMT+0200 (CEST)');",
                "err": {},
                "isRoot": false,
                "uuid": "1a373b88-0b95-4355-88d6-6c46a310bd63",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update toDate when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update toDate when it is changed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var toDate = wrapper.find('#toDate');\ntoDate.simulate('change', { target: { value: '2018-04-03' } });\n(0, _chai.expect)(wrapper.state().toDate.toString()).equal('Tue Apr 03 2018 02:00:00 GMT+0200 (CEST)');",
                "err": {},
                "isRoot": false,
                "uuid": "0f073f93-5628-47cc-a720-217919b0eff4",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update reason when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update reason when it is changed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var reason = wrapper.find('#reason');\nreason.simulate('change', { target: { value: 'Vacations' } });\n(0, _chai.expect)(wrapper.state().reason.toString()).equal('Vacations');",
                "err": {},
                "isRoot": false,
                "uuid": "ba6d36cb-c075-4f0f-aef6-2272d82907c1",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update leave type when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update leave type when it is changed",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var leaveType = wrapper.find('FormControl');\nleaveType.simulate('change', { target: { value: 'LOP' } });\n(0, _chai.expect)(wrapper.state().type.toString()).equal('LOP');",
                "err": {},
                "isRoot": false,
                "uuid": "ad4e512c-8444-4cf4-a192-6f731e122e32",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should submit leave when clicked on Submit",
                "fullTitle": "Leave Form Component Event Handlers should submit leave when clicked on Submit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var submitBtn = wrapper.find('#submitBtn');\nsubmitBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(submitLeaveStub.called).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "4de44912-a823-4138-9410-13c3a0e62a5b",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/leaves/components/leaveFormSpec.js",
            "uuid": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/leaveFormSpec.js",
            "passes": [
              {
                "title": "should update fromDate when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update fromDate when it is changed",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var fromDate = wrapper.find('#fromDate');\nfromDate.simulate('change', { target: { value: '2018-04-01' } });\n(0, _chai.expect)(wrapper.state().fromDate.toString()).equal('Sun Apr 01 2018 02:00:00 GMT+0200 (CEST)');",
                "err": {},
                "isRoot": false,
                "uuid": "1a373b88-0b95-4355-88d6-6c46a310bd63",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update toDate when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update toDate when it is changed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var toDate = wrapper.find('#toDate');\ntoDate.simulate('change', { target: { value: '2018-04-03' } });\n(0, _chai.expect)(wrapper.state().toDate.toString()).equal('Tue Apr 03 2018 02:00:00 GMT+0200 (CEST)');",
                "err": {},
                "isRoot": false,
                "uuid": "0f073f93-5628-47cc-a720-217919b0eff4",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update reason when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update reason when it is changed",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var reason = wrapper.find('#reason');\nreason.simulate('change', { target: { value: 'Vacations' } });\n(0, _chai.expect)(wrapper.state().reason.toString()).equal('Vacations');",
                "err": {},
                "isRoot": false,
                "uuid": "ba6d36cb-c075-4f0f-aef6-2272d82907c1",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should update leave type when it is changed",
                "fullTitle": "Leave Form Component Event Handlers should update leave type when it is changed",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var leaveType = wrapper.find('FormControl');\nleaveType.simulate('change', { target: { value: 'LOP' } });\n(0, _chai.expect)(wrapper.state().type.toString()).equal('LOP');",
                "err": {},
                "isRoot": false,
                "uuid": "ad4e512c-8444-4cf4-a192-6f731e122e32",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should submit leave when clicked on Submit",
                "fullTitle": "Leave Form Component Event Handlers should submit leave when clicked on Submit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var submitBtn = wrapper.find('#submitBtn');\nsubmitBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(submitLeaveStub.called).equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "4de44912-a823-4138-9410-13c3a0e62a5b",
                "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/components/leaveFormSpec.js",
        "uuid": "ee1b39d8-90d3-433f-a2f8-1a30dfd50166",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Leave Form Component \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_leaveForm2.default, { fetchLeave: fetchLeaveStub, submitLeave: submitLeaveStub, leaves: [] }));",
            "err": {},
            "isRoot": false,
            "uuid": "e746a88c-47ae-4b3e-b67f-84a52020190c",
            "parentUUID": "ee1b39d8-90d3-433f-a2f8-1a30dfd50166",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/components/leaveFormSpec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dashboard Container",
        "suites": [],
        "tests": [
          {
            "title": "should dispatch an action to navigate To New Leave",
            "fullTitle": "Dashboard Container should dispatch an action to navigate To New Leave",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('navigateToNewLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('@@router/CALL_HISTORY_METHOD');\n(0, _chai.expect)(executedAction.payload).deep.equal({ method: 'push', args: ['new'] });",
            "err": {},
            "isRoot": false,
            "uuid": "060f3fe1-9a60-4ee2-81f1-8c2937fec56d",
            "parentUUID": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/container/dashboardSpec.js",
        "uuid": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Dashboard Container \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapper = (0, _enzyme.shallow)(_react2.default.createElement(\n    _reactRedux.Provider,\n    { store: store },\n    _react2.default.createElement(_dashbord2.default, null)\n));",
            "err": {},
            "isRoot": false,
            "uuid": "3f4161c5-3be7-4c73-a17b-b227c974c5db",
            "parentUUID": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/container/dashboardSpec.js",
        "passes": [
          {
            "title": "should dispatch an action to navigate To New Leave",
            "fullTitle": "Dashboard Container should dispatch an action to navigate To New Leave",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('navigateToNewLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('@@router/CALL_HISTORY_METHOD');\n(0, _chai.expect)(executedAction.payload).deep.equal({ method: 'push', args: ['new'] });",
            "err": {},
            "isRoot": false,
            "uuid": "060f3fe1-9a60-4ee2-81f1-8c2937fec56d",
            "parentUUID": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 3,
        "rootEmpty": false
      },
      {
        "title": "Leave Form Container",
        "suites": [],
        "tests": [
          {
            "title": "should dispatch an action to fetch a leave",
            "fullTitle": "Leave Form Container should dispatch an action to fetch a leave",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('fetchLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('LEAVE_FETCHING');\n(0, _chai.expect)(executedAction.leaveId).equal(1234);",
            "err": {},
            "isRoot": false,
            "uuid": "f9da0511-a565-43af-b4bc-597e290131ae",
            "parentUUID": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/container/leaveFormSpec.js",
        "uuid": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Leave Form Container \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wrapper = (0, _enzyme.shallow)(_react2.default.createElement(\n    _reactRedux.Provider,\n    { store: store },\n    _react2.default.createElement(_leaveForm2.default, { params: { leaveId: 1234 } })\n));",
            "err": {},
            "isRoot": false,
            "uuid": "84c3ea91-3643-45a4-baab-a8f5daff806a",
            "parentUUID": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/container/leaveFormSpec.js",
        "passes": [
          {
            "title": "should dispatch an action to fetch a leave",
            "fullTitle": "Leave Form Container should dispatch an action to fetch a leave",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('fetchLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('LEAVE_FETCHING');\n(0, _chai.expect)(executedAction.leaveId).equal(1234);",
            "err": {},
            "isRoot": false,
            "uuid": "f9da0511-a565-43af-b4bc-597e290131ae",
            "parentUUID": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 7,
        "rootEmpty": false
      },
      {
        "title": "Leaves Action",
        "suites": [],
        "tests": [
          {
            "title": "should dispatch correct action when fetchLeave is called",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.get('/leaves/1234').reply(200, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[1].leave).to.deep.equal(leaveFormStub);\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "f4536add-316a-4e44-9955-d723607b66ba",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeave is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called and returned error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.get('/leaves/1234').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leave with id 1234: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "9191e9e6-b77b-499a-a9ee-f0d4b912860d",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeaves is called",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.get('/leaves').reply(200, [leaveFormStub]);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVES_FETCHED);\n    (0, _chai.expect)(executedActions[1].leaves).to.deep.equal([leaveFormStub]);\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "e37fa85c-b66e-4a04-b40e-62720079f24c",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeaves is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called and returned error",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.get('/leaves').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leaves: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "07886b04-68d0-430d-ab3f-77581c5a6dcd",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when submitLeave is called",
            "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.post('/leaves/').reply(201, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[0].resp).to.deep.equal(leaveFormStub);\n    (0, _chai.expect)(executedActions[1].type).to.equal('@@router/CALL_HISTORY_METHOD');\n    (0, _chai.expect)(executedActions[1].payload).to.deep.equal({ method: 'push', args: ['/'] });\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "5259150d-d314-462a-a7da-9574c2388c91",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when submitLeave is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called and returned error",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.post('/leaves/').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[0].error).to.deep.equal('Unable to submit the leave: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "b760b79d-7a49-4470-a347-c6665e49cee9",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/leavesActionSpec.js",
        "uuid": "f60476d3-deac-408b-b345-1200914c6414",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Leaves Action \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "mockStore = (0, _reduxMockStore2.default)([_reduxThunk2.default]);\napi = (0, _nock2.default)(_http.config.serverUrl);",
            "err": {},
            "isRoot": false,
            "uuid": "71bc3224-5c16-4ea1-94a0-6ab0d6d45c49",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "Leaves Action \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "store = mockStore({});",
            "err": {},
            "isRoot": false,
            "uuid": "b6516051-b0aa-40db-9709-c2c3986a2f08",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Leaves Action \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "store.clearActions();\n_nock2.default.cleanAll();",
            "err": {},
            "isRoot": false,
            "uuid": "80036462-7ea9-430d-b495-86d62b22ff2c",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/leavesActionSpec.js",
        "passes": [
          {
            "title": "should dispatch correct action when fetchLeave is called",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.get('/leaves/1234').reply(200, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[1].leave).to.deep.equal(leaveFormStub);\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "f4536add-316a-4e44-9955-d723607b66ba",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeave is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called and returned error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.get('/leaves/1234').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leave with id 1234: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "9191e9e6-b77b-499a-a9ee-f0d4b912860d",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeaves is called",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.get('/leaves').reply(200, [leaveFormStub]);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVES_FETCHED);\n    (0, _chai.expect)(executedActions[1].leaves).to.deep.equal([leaveFormStub]);\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "e37fa85c-b66e-4a04-b40e-62720079f24c",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when fetchLeaves is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called and returned error",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.get('/leaves').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leaves: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "07886b04-68d0-430d-ab3f-77581c5a6dcd",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when submitLeave is called",
            "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var request = api.post('/leaves/').reply(201, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[0].resp).to.deep.equal(leaveFormStub);\n    (0, _chai.expect)(executedActions[1].type).to.equal('@@router/CALL_HISTORY_METHOD');\n    (0, _chai.expect)(executedActions[1].payload).to.deep.equal({ method: 'push', args: ['/'] });\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "5259150d-d314-462a-a7da-9574c2388c91",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should dispatch correct action when submitLeave is called and returned error",
            "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called and returned error",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'error' };\nvar request = api.post('/leaves/').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[0].error).to.deep.equal('Unable to submit the leave: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
            "err": {},
            "isRoot": false,
            "uuid": "b760b79d-7a49-4470-a347-c6665e49cee9",
            "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 20,
        "rootEmpty": false
      },
      {
        "title": "Leaves Reducer",
        "suites": [],
        "tests": [
          {
            "title": "should return the initial state",
            "fullTitle": "Leaves Reducer should return the initial state",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)((0, _leavesReducer2.default)(undefined, {})).deep.equal({ leaves: [], leave: {} });",
            "err": {},
            "isRoot": false,
            "uuid": "1d2e1560-959a-44e8-bfb2-46fc793e8983",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_FETCHING action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHING action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var action = { type: _leavesActions.constants.LEAVE_FETCHING };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.status).to.equal(\"LOADING\");",
            "err": {},
            "isRoot": false,
            "uuid": "5223e884-d225-492f-913e-27ff44e03ab2",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_FETCHED action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHED action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_FETCHED, leave: leave };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leave).deep.equal(leave);",
            "err": {},
            "isRoot": false,
            "uuid": "9ceb1daf-1b11-4863-9255-de70947012d1",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVES_FETCHED action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVES_FETCHED action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVES_FETCHED, leaves: [leave] };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leaves).deep.equal([leave]);",
            "err": {},
            "isRoot": false,
            "uuid": "5b492028-c3f0-46bc-a9d3-0f44fb459bdf",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_ERROR action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_ERROR action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_ERROR, error: error };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.error).deep.equal(error);",
            "err": {},
            "isRoot": false,
            "uuid": "57e04707-eb4a-4fcb-8ad2-c4ef1911d3d9",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/leaves/leavesReducerSpec.js",
        "uuid": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "/Users/kunalhire/workspace/leave-management-system/test/leaves/leavesReducerSpec.js",
        "passes": [
          {
            "title": "should return the initial state",
            "fullTitle": "Leaves Reducer should return the initial state",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _chai.expect)((0, _leavesReducer2.default)(undefined, {})).deep.equal({ leaves: [], leave: {} });",
            "err": {},
            "isRoot": false,
            "uuid": "1d2e1560-959a-44e8-bfb2-46fc793e8983",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_FETCHING action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHING action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var action = { type: _leavesActions.constants.LEAVE_FETCHING };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.status).to.equal(\"LOADING\");",
            "err": {},
            "isRoot": false,
            "uuid": "5223e884-d225-492f-913e-27ff44e03ab2",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_FETCHED action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHED action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_FETCHED, leave: leave };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leave).deep.equal(leave);",
            "err": {},
            "isRoot": false,
            "uuid": "9ceb1daf-1b11-4863-9255-de70947012d1",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVES_FETCHED action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVES_FETCHED action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVES_FETCHED, leaves: [leave] };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leaves).deep.equal([leave]);",
            "err": {},
            "isRoot": false,
            "uuid": "5b492028-c3f0-46bc-a9d3-0f44fb459bdf",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a new state with status LOADING when a LEAVE_ERROR action is received",
            "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_ERROR action is received",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var error = { error: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_ERROR, error: error };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.error).deep.equal(error);",
            "err": {},
            "isRoot": false,
            "uuid": "57e04707-eb4a-4fcb-8ad2-c4ef1911d3d9",
            "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "b8524966-c17c-420d-ba54-734a87aba17f",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render NewLeave button",
      "fullTitle": "Render should render NewLeave button",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var newLeaveBtn = wrapper.find('Button');\n(0, _chai.expect)(newLeaveBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(newLeaveBtn.prop('children')).equal('New Leave');",
      "err": {},
      "isRoot": false,
      "uuid": "2654756d-3110-4ba1-b785-e5ad9343f6f0",
      "parentUUID": "c06bbfed-82ac-4307-93f6-8eaed0098346",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should navigate to new leave page when clicked on New Leave button",
      "fullTitle": "Event Handlers should navigate to new leave page when clicked on New Leave button",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var newLeaveBtn = wrapper.find('Button');\nnewLeaveBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(navigateToNewLeaveStub.called).equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "deb2c7d2-efc6-4887-af24-42303a9802c4",
      "parentUUID": "ff7484e3-bc96-40c3-adf4-86ab640226b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should have the correct form name",
      "fullTitle": "Render should have the correct form name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var title = wrapper.find('h2');\n(0, _chai.expect)(title.text()).equal(\"Leave Management System\");",
      "err": {},
      "isRoot": false,
      "uuid": "c9d612ff-2d75-4b57-a173-d31b968d5d48",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render fromDate",
      "fullTitle": "Render should render fromDate",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var fromDate = wrapper.find('#fromDate');\n(0, _chai.expect)(fromDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(fromDate.prop('type')).equal('date');\n(0, _chai.expect)(fromDate.prop('label')).equal('From');",
      "err": {},
      "isRoot": false,
      "uuid": "a97169ef-013a-4d95-94a0-9d682104aab7",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render toDate",
      "fullTitle": "Render should render toDate",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var toDate = wrapper.find('#toDate');\n(0, _chai.expect)(toDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(toDate.prop('type')).equal('date');\n(0, _chai.expect)(toDate.prop('label')).equal('To');",
      "err": {},
      "isRoot": false,
      "uuid": "70d97ad4-c3b1-47ff-802d-dbb5a798c478",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render reason",
      "fullTitle": "Render should render reason",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var reason = wrapper.find('#reason');\n(0, _chai.expect)(reason.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(reason.prop('type')).equal('text');\n(0, _chai.expect)(reason.prop('label')).equal('Reason');",
      "err": {},
      "isRoot": false,
      "uuid": "75464c5a-9359-4419-91b9-0cb3e809f58c",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render leaveType",
      "fullTitle": "Render should render leaveType",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leaveType = wrapper.find('FormGroup');\n(0, _chai.expect)(leaveType.find('ControlLabel').prop('children')).equal('Leave Type');\nvar options = leaveType.find('FormControl');\n(0, _chai.expect)(options.childAt(0).prop('children')).equal('Paid Leaves');\n(0, _chai.expect)(options.childAt(1).prop('children')).equal('Leave Without Pay');\n(0, _chai.expect)(options.childAt(2).prop('children')).equal('Compensation Off');",
      "err": {},
      "isRoot": false,
      "uuid": "c8960cb6-ca9a-4296-aa8b-2e3cc7e091fe",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render Submit Button",
      "fullTitle": "Render should render Submit Button",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var submitBtn = wrapper.find('#submitBtn');\n(0, _chai.expect)(submitBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(submitBtn.prop('children')).equal('Submit');",
      "err": {},
      "isRoot": false,
      "uuid": "4c592d3a-a153-4897-9b2d-8fa1e0a063ef",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update fromDate when it is changed",
      "fullTitle": "Event Handlers should update fromDate when it is changed",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var fromDate = wrapper.find('#fromDate');\nfromDate.simulate('change', { target: { value: '2018-04-01' } });\n(0, _chai.expect)(wrapper.state().fromDate.toString()).equal('Sun Apr 01 2018 02:00:00 GMT+0200 (CEST)');",
      "err": {},
      "isRoot": false,
      "uuid": "1a373b88-0b95-4355-88d6-6c46a310bd63",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update toDate when it is changed",
      "fullTitle": "Event Handlers should update toDate when it is changed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var toDate = wrapper.find('#toDate');\ntoDate.simulate('change', { target: { value: '2018-04-03' } });\n(0, _chai.expect)(wrapper.state().toDate.toString()).equal('Tue Apr 03 2018 02:00:00 GMT+0200 (CEST)');",
      "err": {},
      "isRoot": false,
      "uuid": "0f073f93-5628-47cc-a720-217919b0eff4",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update reason when it is changed",
      "fullTitle": "Event Handlers should update reason when it is changed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var reason = wrapper.find('#reason');\nreason.simulate('change', { target: { value: 'Vacations' } });\n(0, _chai.expect)(wrapper.state().reason.toString()).equal('Vacations');",
      "err": {},
      "isRoot": false,
      "uuid": "ba6d36cb-c075-4f0f-aef6-2272d82907c1",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update leave type when it is changed",
      "fullTitle": "Event Handlers should update leave type when it is changed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leaveType = wrapper.find('FormControl');\nleaveType.simulate('change', { target: { value: 'LOP' } });\n(0, _chai.expect)(wrapper.state().type.toString()).equal('LOP');",
      "err": {},
      "isRoot": false,
      "uuid": "ad4e512c-8444-4cf4-a192-6f731e122e32",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should submit leave when clicked on Submit",
      "fullTitle": "Event Handlers should submit leave when clicked on Submit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var submitBtn = wrapper.find('#submitBtn');\nsubmitBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(submitLeaveStub.called).equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4de44912-a823-4138-9410-13c3a0e62a5b",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch an action to navigate To New Leave",
      "fullTitle": "Dashboard Container should dispatch an action to navigate To New Leave",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('navigateToNewLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('@@router/CALL_HISTORY_METHOD');\n(0, _chai.expect)(executedAction.payload).deep.equal({ method: 'push', args: ['new'] });",
      "err": {},
      "isRoot": false,
      "uuid": "060f3fe1-9a60-4ee2-81f1-8c2937fec56d",
      "parentUUID": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch an action to fetch a leave",
      "fullTitle": "Leave Form Container should dispatch an action to fetch a leave",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('fetchLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('LEAVE_FETCHING');\n(0, _chai.expect)(executedAction.leaveId).equal(1234);",
      "err": {},
      "isRoot": false,
      "uuid": "f9da0511-a565-43af-b4bc-597e290131ae",
      "parentUUID": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeave is called",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.get('/leaves/1234').reply(200, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[1].leave).to.deep.equal(leaveFormStub);\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "f4536add-316a-4e44-9955-d723607b66ba",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeave is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called and returned error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.get('/leaves/1234').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leave with id 1234: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "9191e9e6-b77b-499a-a9ee-f0d4b912860d",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeaves is called",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.get('/leaves').reply(200, [leaveFormStub]);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVES_FETCHED);\n    (0, _chai.expect)(executedActions[1].leaves).to.deep.equal([leaveFormStub]);\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "e37fa85c-b66e-4a04-b40e-62720079f24c",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeaves is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called and returned error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.get('/leaves').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leaves: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "07886b04-68d0-430d-ab3f-77581c5a6dcd",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when submitLeave is called",
      "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.post('/leaves/').reply(201, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[0].resp).to.deep.equal(leaveFormStub);\n    (0, _chai.expect)(executedActions[1].type).to.equal('@@router/CALL_HISTORY_METHOD');\n    (0, _chai.expect)(executedActions[1].payload).to.deep.equal({ method: 'push', args: ['/'] });\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "5259150d-d314-462a-a7da-9574c2388c91",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when submitLeave is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called and returned error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.post('/leaves/').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[0].error).to.deep.equal('Unable to submit the leave: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "b760b79d-7a49-4470-a347-c6665e49cee9",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Leaves Reducer should return the initial state",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _leavesReducer2.default)(undefined, {})).deep.equal({ leaves: [], leave: {} });",
      "err": {},
      "isRoot": false,
      "uuid": "1d2e1560-959a-44e8-bfb2-46fc793e8983",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_FETCHING action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHING action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var action = { type: _leavesActions.constants.LEAVE_FETCHING };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.status).to.equal(\"LOADING\");",
      "err": {},
      "isRoot": false,
      "uuid": "5223e884-d225-492f-913e-27ff44e03ab2",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_FETCHED action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHED action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_FETCHED, leave: leave };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leave).deep.equal(leave);",
      "err": {},
      "isRoot": false,
      "uuid": "9ceb1daf-1b11-4863-9255-de70947012d1",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVES_FETCHED action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVES_FETCHED action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVES_FETCHED, leaves: [leave] };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leaves).deep.equal([leave]);",
      "err": {},
      "isRoot": false,
      "uuid": "5b492028-c3f0-46bc-a9d3-0f44fb459bdf",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_ERROR action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_ERROR action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_ERROR, error: error };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.error).deep.equal(error);",
      "err": {},
      "isRoot": false,
      "uuid": "57e04707-eb4a-4fcb-8ad2-c4ef1911d3d9",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render NewLeave button",
      "fullTitle": "Render should render NewLeave button",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var newLeaveBtn = wrapper.find('Button');\n(0, _chai.expect)(newLeaveBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(newLeaveBtn.prop('children')).equal('New Leave');",
      "err": {},
      "isRoot": false,
      "uuid": "2654756d-3110-4ba1-b785-e5ad9343f6f0",
      "parentUUID": "c06bbfed-82ac-4307-93f6-8eaed0098346",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should navigate to new leave page when clicked on New Leave button",
      "fullTitle": "Event Handlers should navigate to new leave page when clicked on New Leave button",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var newLeaveBtn = wrapper.find('Button');\nnewLeaveBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(navigateToNewLeaveStub.called).equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "deb2c7d2-efc6-4887-af24-42303a9802c4",
      "parentUUID": "ff7484e3-bc96-40c3-adf4-86ab640226b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should have the correct form name",
      "fullTitle": "Render should have the correct form name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var title = wrapper.find('h2');\n(0, _chai.expect)(title.text()).equal(\"Leave Management System\");",
      "err": {},
      "isRoot": false,
      "uuid": "c9d612ff-2d75-4b57-a173-d31b968d5d48",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render fromDate",
      "fullTitle": "Render should render fromDate",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var fromDate = wrapper.find('#fromDate');\n(0, _chai.expect)(fromDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(fromDate.prop('type')).equal('date');\n(0, _chai.expect)(fromDate.prop('label')).equal('From');",
      "err": {},
      "isRoot": false,
      "uuid": "a97169ef-013a-4d95-94a0-9d682104aab7",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render toDate",
      "fullTitle": "Render should render toDate",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var toDate = wrapper.find('#toDate');\n(0, _chai.expect)(toDate.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(toDate.prop('type')).equal('date');\n(0, _chai.expect)(toDate.prop('label')).equal('To');",
      "err": {},
      "isRoot": false,
      "uuid": "70d97ad4-c3b1-47ff-802d-dbb5a798c478",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render reason",
      "fullTitle": "Render should render reason",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var reason = wrapper.find('#reason');\n(0, _chai.expect)(reason.type()).equal(_fieldGroup2.default);\n(0, _chai.expect)(reason.prop('type')).equal('text');\n(0, _chai.expect)(reason.prop('label')).equal('Reason');",
      "err": {},
      "isRoot": false,
      "uuid": "75464c5a-9359-4419-91b9-0cb3e809f58c",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render leaveType",
      "fullTitle": "Render should render leaveType",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leaveType = wrapper.find('FormGroup');\n(0, _chai.expect)(leaveType.find('ControlLabel').prop('children')).equal('Leave Type');\nvar options = leaveType.find('FormControl');\n(0, _chai.expect)(options.childAt(0).prop('children')).equal('Paid Leaves');\n(0, _chai.expect)(options.childAt(1).prop('children')).equal('Leave Without Pay');\n(0, _chai.expect)(options.childAt(2).prop('children')).equal('Compensation Off');",
      "err": {},
      "isRoot": false,
      "uuid": "c8960cb6-ca9a-4296-aa8b-2e3cc7e091fe",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render Submit Button",
      "fullTitle": "Render should render Submit Button",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var submitBtn = wrapper.find('#submitBtn');\n(0, _chai.expect)(submitBtn.type()).equal(_reactBootstrap.Button);\n(0, _chai.expect)(submitBtn.prop('children')).equal('Submit');",
      "err": {},
      "isRoot": false,
      "uuid": "4c592d3a-a153-4897-9b2d-8fa1e0a063ef",
      "parentUUID": "38eb2946-400e-423f-a0ba-daac15723166",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update fromDate when it is changed",
      "fullTitle": "Event Handlers should update fromDate when it is changed",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var fromDate = wrapper.find('#fromDate');\nfromDate.simulate('change', { target: { value: '2018-04-01' } });\n(0, _chai.expect)(wrapper.state().fromDate.toString()).equal('Sun Apr 01 2018 02:00:00 GMT+0200 (CEST)');",
      "err": {},
      "isRoot": false,
      "uuid": "1a373b88-0b95-4355-88d6-6c46a310bd63",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update toDate when it is changed",
      "fullTitle": "Event Handlers should update toDate when it is changed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var toDate = wrapper.find('#toDate');\ntoDate.simulate('change', { target: { value: '2018-04-03' } });\n(0, _chai.expect)(wrapper.state().toDate.toString()).equal('Tue Apr 03 2018 02:00:00 GMT+0200 (CEST)');",
      "err": {},
      "isRoot": false,
      "uuid": "0f073f93-5628-47cc-a720-217919b0eff4",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update reason when it is changed",
      "fullTitle": "Event Handlers should update reason when it is changed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var reason = wrapper.find('#reason');\nreason.simulate('change', { target: { value: 'Vacations' } });\n(0, _chai.expect)(wrapper.state().reason.toString()).equal('Vacations');",
      "err": {},
      "isRoot": false,
      "uuid": "ba6d36cb-c075-4f0f-aef6-2272d82907c1",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should update leave type when it is changed",
      "fullTitle": "Event Handlers should update leave type when it is changed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leaveType = wrapper.find('FormControl');\nleaveType.simulate('change', { target: { value: 'LOP' } });\n(0, _chai.expect)(wrapper.state().type.toString()).equal('LOP');",
      "err": {},
      "isRoot": false,
      "uuid": "ad4e512c-8444-4cf4-a192-6f731e122e32",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should submit leave when clicked on Submit",
      "fullTitle": "Event Handlers should submit leave when clicked on Submit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var submitBtn = wrapper.find('#submitBtn');\nsubmitBtn.simulate('click', { preventDefault: function preventDefault() {} });\n(0, _chai.expect)(submitLeaveStub.called).equal(true);",
      "err": {},
      "isRoot": false,
      "uuid": "4de44912-a823-4138-9410-13c3a0e62a5b",
      "parentUUID": "2249aee9-e6d8-4652-ae0e-1dd0fdf49df5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch an action to navigate To New Leave",
      "fullTitle": "Dashboard Container should dispatch an action to navigate To New Leave",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('navigateToNewLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('@@router/CALL_HISTORY_METHOD');\n(0, _chai.expect)(executedAction.payload).deep.equal({ method: 'push', args: ['new'] });",
      "err": {},
      "isRoot": false,
      "uuid": "060f3fe1-9a60-4ee2-81f1-8c2937fec56d",
      "parentUUID": "9c6e192b-5ca2-413b-8f15-8f7ed1787cc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch an action to fetch a leave",
      "fullTitle": "Leave Form Container should dispatch an action to fetch a leave",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var shallowWrapper = wrapper.dive({ context: { store: store } });\nshallowWrapper.prop('fetchLeave')();\nvar executedAction = store.getActions()[0];\n(0, _chai.expect)(executedAction.type).equal('LEAVE_FETCHING');\n(0, _chai.expect)(executedAction.leaveId).equal(1234);",
      "err": {},
      "isRoot": false,
      "uuid": "f9da0511-a565-43af-b4bc-597e290131ae",
      "parentUUID": "2c41c71b-a8bc-4911-bece-6f1d4ed84ea4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeave is called",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.get('/leaves/1234').reply(200, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[1].leave).to.deep.equal(leaveFormStub);\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "f4536add-316a-4e44-9955-d723607b66ba",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeave is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeave is called and returned error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.get('/leaves/1234').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeave(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leave with id 1234: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "9191e9e6-b77b-499a-a9ee-f0d4b912860d",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeaves is called",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.get('/leaves').reply(200, [leaveFormStub]);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVES_FETCHED);\n    (0, _chai.expect)(executedActions[1].leaves).to.deep.equal([leaveFormStub]);\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "e37fa85c-b66e-4a04-b40e-62720079f24c",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when fetchLeaves is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when fetchLeaves is called and returned error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.get('/leaves').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.fetchLeaves(1234)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHING);\n    (0, _chai.expect)(executedActions[1].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[1].error).to.deep.equal('Unable to retrieve the leaves: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "07886b04-68d0-430d-ab3f-77581c5a6dcd",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when submitLeave is called",
      "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var request = api.post('/leaves/').reply(201, leaveFormStub);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_FETCHED);\n    (0, _chai.expect)(executedActions[0].resp).to.deep.equal(leaveFormStub);\n    (0, _chai.expect)(executedActions[1].type).to.equal('@@router/CALL_HISTORY_METHOD');\n    (0, _chai.expect)(executedActions[1].payload).to.deep.equal({ method: 'push', args: ['/'] });\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "5259150d-d314-462a-a7da-9574c2388c91",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should dispatch correct action when submitLeave is called and returned error",
      "fullTitle": "Leaves Action should dispatch correct action when submitLeave is called and returned error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'error' };\nvar request = api.post('/leaves/').reply(500, error);\nstore.dispatch(_leavesActions.leavesActions.submitLeave(leaveFormStub)).then(function (resp) {\n    request.done();\n    var executedActions = store.getActions();\n    (0, _chai.expect)(executedActions[0].type).to.equal(_leavesActions.constants.LEAVE_ERROR);\n    (0, _chai.expect)(executedActions[0].error).to.deep.equal('Unable to submit the leave: 500 (Internal Server Error)');\n    done();\n}).catch(done);",
      "err": {},
      "isRoot": false,
      "uuid": "b760b79d-7a49-4470-a347-c6665e49cee9",
      "parentUUID": "f60476d3-deac-408b-b345-1200914c6414",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Leaves Reducer should return the initial state",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "(0, _chai.expect)((0, _leavesReducer2.default)(undefined, {})).deep.equal({ leaves: [], leave: {} });",
      "err": {},
      "isRoot": false,
      "uuid": "1d2e1560-959a-44e8-bfb2-46fc793e8983",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_FETCHING action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHING action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var action = { type: _leavesActions.constants.LEAVE_FETCHING };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.status).to.equal(\"LOADING\");",
      "err": {},
      "isRoot": false,
      "uuid": "5223e884-d225-492f-913e-27ff44e03ab2",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_FETCHED action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_FETCHED action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_FETCHED, leave: leave };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leave).deep.equal(leave);",
      "err": {},
      "isRoot": false,
      "uuid": "9ceb1daf-1b11-4863-9255-de70947012d1",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVES_FETCHED action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVES_FETCHED action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var leave = { dummy: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVES_FETCHED, leaves: [leave] };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.leaves).deep.equal([leave]);",
      "err": {},
      "isRoot": false,
      "uuid": "5b492028-c3f0-46bc-a9d3-0f44fb459bdf",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a new state with status LOADING when a LEAVE_ERROR action is received",
      "fullTitle": "Leaves Reducer should return a new state with status LOADING when a LEAVE_ERROR action is received",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var error = { error: 'dummy' };\nvar action = { type: _leavesActions.constants.LEAVE_ERROR, error: error };\nvar updatedState = (0, _leavesReducer2.default)(undefined, action);\n(0, _chai.expect)(updatedState.error).deep.equal(error);",
      "err": {},
      "isRoot": false,
      "uuid": "57e04707-eb4a-4fcb-8ad2-c4ef1911d3d9",
      "parentUUID": "7a56fcf6-d874-42eb-b274-bb5e9fbb1972",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2018
}